[main]
#提供了对根对象securityManager及其依赖的配置  
securityManager=org.apache.shiro.web.mgt.DefaultWebSecurityManager  

##用于多Realm时的授权匹配
authenticator=org.apache.shiro.authc.pam.ModularRealmAuthenticator  
securityManager.authenticator=$authenticator  
  
atLeastOneSuccessfulStrategy=org.apache.shiro.authc.pam.AtLeastOneSuccessfulStrategy  
securityManager.authenticator.authenticationStrategy=$atLeastOneSuccessfulStrategy 
		
myRolePermissionResolver=ggauth.shiro.user.permission.MyRolePermissionResolver
securityManager.authorizer.rolePermissionResolver=$myRolePermissionResolver

myPermissionResolver=ggauth.shiro.user.permission.MyPermissionResolver
securityManager.authorizer.permissionResolver=$myPermissionResolver
 
userRealm=ggauth.shiro.user.realm.UserRealm
##启用缓存
##userRealm.cachingEnabled=true 
##启用身份验证缓存，即缓存AuthenticationInfo信息，默认false；
userRealm.authenticationCachingEnabled=true  
##缓存AuthorizationInfo信息的缓存名称；
userRealm.authenticationCacheName=authenticationCache 
securityManager.realms=$userRealm

sessionManager=org.apache.shiro.web.session.mgt.DefaultWebSessionManager  
##设置全局会话超时时间，默认30分钟，即如果30分钟内没有访问会话将过期；-1000一直有效
sessionManager.globalSessionTimeout=3600000  
##是否开启会话验证器，默认是开启的
sessionManager.sessionValidationSchedulerEnabled=true  
securityManager.sessionManager=$sessionManager 

##监听用户session
sessionListener=ggauth.shiro.user.listener.UserSessionListener
securityManager.sessionManager.sessionListeners=$sessionListener

##配置缓存 默认情况下使用MapCache实现，内部使用ConcurrentHashMap保存缓存的会话
sessionDAO=org.apache.shiro.session.mgt.eis.EnterpriseCacheSessionDAO
##设置Session缓存名字，默认就是shiro-activeSessionCache
sessionDAO.activeSessionsCacheName=shiro-activeSessionCach
securityManager.sessionManager.sessionDAO=$sessionDAO

cacheManager = org.apache.shiro.cache.ehcache.EhCacheManager
##设置ehcache缓存的配置文件
cacheManager.cacheManagerConfigFile=classpath:shiro-ehcache.xml
##缓存管理器，用于管理缓存的，此处使用Ehcache实现;设置SecurityManager的cacheManager，会自动设置实现了CacheManagerAware接口的相应对象，如SessionDAO的cacheManager
securityManager.cacheManager=$cacheManager

##使用JDK的ScheduledExecutorService进行定期调度并验证会话是否过期；
###会话验证调度器实现都是直接调用AbstractValidatingSessionManager 的validateSessions方法进行验证。
##如果在会话过期时不想删除过期的会话,可以设置SessionManager的deleteInvalidSessions属性为false ，默认是开启的，
##在会话过期后会调用SessionDAO的delete方法删除会话：如会话时持久化存储的，可以调用此方法进行删除
sessionValidationScheduler=org.apache.shiro.session.mgt.ExecutorServiceSessionValidationScheduler
##设置调度时间间隔，单位毫秒，默认就是1小时 
sessionValidationScheduler.interval=60000
##设置会话验证调度器进行会话验证时的会话管理器
sessionValidationScheduler.sessionManager=$sessionManager  
##设置会话验证调度器，默认就是使用
securityManager.sessionManager.sessionValidationScheduler=$sessionValidationScheduler   

###自定义生成sessionid
sessionIdGenerator=ggauth.shiro.user.common.UuidSessionIdGenerator
securityManager.sessionManager.sessionDAO.sessionIdGenerator=$sessionIdGenerator

